// <auto-generated />
using System;
using CarRental.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarRentalAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250628013400_Bloby")]
    partial class Bloby
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarRentalAPI.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Toyota",
                            CityId = 1,
                            ImageUrl = "https://carrentalapkstorage.blob.core.windows.net/obrazki/Corolla.jpg",
                            IsAvailable = true,
                            Model = "Corolla",
                            PricePerDay = 150.00m,
                            Year = 2022
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Skoda",
                            CityId = 1,
                            ImageUrl = "https://carrentalapkstorage.blob.core.windows.net/obrazki/Octavia.jpg",
                            IsAvailable = true,
                            Model = "Octavia",
                            PricePerDay = 180.00m,
                            Year = 2023
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Volkswagen",
                            CityId = 2,
                            ImageUrl = "https://carrentalapkstorage.blob.core.windows.net/obrazki/Golf.jpg",
                            IsAvailable = true,
                            Model = "Golf",
                            PricePerDay = 130.00m,
                            Year = 2021
                        },
                        new
                        {
                            Id = 4,
                            Brand = "BMW",
                            CityId = 3,
                            ImageUrl = "https://carrentalapkstorage.blob.core.windows.net/obrazki/bmw3.jpg",
                            IsAvailable = true,
                            Model = "3 Series",
                            PricePerDay = 250.00m,
                            Year = 2024
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Fiat",
                            CityId = 4,
                            ImageUrl = "https://carrentalapkstorage.blob.core.windows.net/obrazki/Fiat.jpg",
                            IsAvailable = true,
                            Model = "500",
                            PricePerDay = 130.00m,
                            Year = 2022
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Setra",
                            CityId = 4,
                            ImageUrl = "https://carrentalapkstorage.blob.core.windows.net/obrazki/autokar_mediolan.jpg",
                            IsAvailable = true,
                            Model = "Inter",
                            PricePerDay = 1500.00m,
                            Year = 2011
                        });
                });

            modelBuilder.Entity("CarRentalAPI.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://carrentalapkstorage.blob.core.windows.net/obrazki/warszawa.jpg",
                            Name = "Warszawa"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://carrentalapkstorage.blob.core.windows.net/obrazki/krak%C3%B3w.jpg",
                            Name = "Kraków"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://carrentalapkstorage.blob.core.windows.net/obrazki/Gdansk.jpg",
                            Name = "Gdańsk"
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "https://carrentalapkstorage.blob.core.windows.net/obrazki/Mediolan.jpg",
                            Name = "Mediolan"
                        });
                });

            modelBuilder.Entity("CarRentalAPI.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RentalDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("CarRentalAPI.Models.Car", b =>
                {
                    b.HasOne("CarRentalAPI.Models.City", "City")
                        .WithMany("Cars")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("CarRentalAPI.Models.Reservation", b =>
                {
                    b.HasOne("CarRentalAPI.Models.Car", "Car")
                        .WithMany("Reservations")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("CarRentalAPI.Models.Car", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("CarRentalAPI.Models.City", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
